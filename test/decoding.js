const dgram = require('dgram')
const coroutine = require('coroutine')
let NetflowDecoder = require('../lib');

let VYOS_PACKET = '0005001dbc81926d5c189b8900000000ab9bdb8300000bb8b4ac1f1173b61e6c0af4c80602b302be0000000100000144bc80a87bbc80a87bb0ce00500018060012ccfc02161b0000b66f211173b622250af4c8fe02b3026f0000000100000034bc80dbaebc80dbaefaec0050000206001026fc070c140000dedd241173b6291d0af4c8fe02b3026f0000000100000028bc80d1d0bc80d1d04362022a001006001026fc07131400006a793e11d24a07510af4c8fe02b3026f0000000100000034bc814533bc814533263700500010060012effc07131500006a793e11d24a07510af4c8fe02b3026f0000000100000034bc812ec3bc812ec3263900500010060012effc07131500006fc05a117a31061a0af4c80602b302be0000000100000050bc814afabc814afaac2e114e00180600ff82fc06001500007063601173b623700af4c8fe02b3026f0000000100000028bc80ac8abc80ac8a19850050001006001026fc070f1400003c0a621179452e427cca0b6d02b302b20000000100000028bc812875bc81287501bbddc00010060012e5fc07101100003c0a6211794530947cca0b5102b302010000000100000040bc80af02bc80af0201bb973c0010060012e5fc07101100003c0a6211794530957cca0b5102b302010000000100000034bc80a87bbc80a87b01bb2fb10010060012e5fc07101100003c0a6211794537de7cca0b5102b302010000000100000028bc8142e8bc8142e801bbb2390010060012e5fc07101100003c0a6211794537de7cca0b5102b302010000000100000028bc811069bc81106901bbeedd0010060012e5fc07101100003c0a6211794537de7cca0b6d02b302b20000000100000028bc80fbeabc80fbea01bbad190010060012e5fc07101100003c0a6211794537de7cca0b6d02b302b20000000100000028bc80d015bc80d01501bb273f0010060012e5fc0710110000b6f76a1173b67d8a0af4c80602b302be000000010000003cbc810bcfbc810bcf4f4f0050000206001026fc08121700002a5b6c1179454ec27cca0b6d02b302b20000000100000035bc810b5abc810b5a9f4c43c0000011001026fc07101100007a726d1173b6195f0af4c8fe02b3026f000000010000003cbc8122bdbc8122bd00507d63001206009437fc0710140000da54791173b67d8a0af4c80602b302be0000000100000028bc80c3dcbc80c3dcda300050001006001026fc08151700007b7d7b11794566767cca0b6d02b302b20000000100000028bc80faa0bc80faa001bb054300100600ff82fc07001100006a038b11794564227cca0b6d02b302b20000000100000034bc818dfcbc818dfc01bbcb9d00100600ff82fc07001100006e9a911173b6131a0af4c8fe02b3026f00000001000000dbbc8125c7bc8125c7e9e001bb001806001026fc0715140000da5c98117945308a7cca0b6d02b302b20000000100000034bc80faa0bc80faa0078f9f7e001006001026fc071011000011f8a111794520067cca0b6d02b302b200000001000005c4bc80cad5bc80cad501bbd6280010060202cafc0711110000ab08a71179452de67cca0b6d02b302b20000000100000028bc810d9cbc810d9c01bbfdb8001006001026fc070f1100003af0ad11794561667cca0b6d02b302b2000000010000003dbc815c30bc815c30457caa430000110012e5fc070f1100003af0ad1179452eb27cca0b5102b30201000000010000003dbc8136e4bc8136e4457c7cb80000110012e5fc070f1100007834b9117945308c7cca0b5102b3020100000001000005d0bc8172ebbc8172eb005048ee00100600fc07fc07111100007b97be1179450cba7cca0b5102b302010000000100000048bc81667ebc81667e2340f5130000110044e6fc070f110000df51c51173b61e6c0af4c80602b302be000000010000003cbc817138bc817138dee0005000020600ff82fc02001b0000';



describe('NetflowDecoder', function () {

    it('should be a function', function () {
        assert.isFunction(NetflowDecoder); //is actually a constructor
    });

    describe('nfPktDecode', function () {
        it('should be able to decode vyos packet', function () {
            let buffer = new Buffer(VYOS_PACKET, 'hex');
            assert.equal(buffer.length, VYOS_PACKET.length / 2);
            let nfDecoder = new NetflowDecoder(9996)
            nfDecoder.on('data', (d) => {
                assert.equal(d.header.version, 5)
                assert.equal(d.header.count, d.flows.length)
            })
            nfDecoder.run((e) => console.log(e))
            let sock = dgram.createSocket('udp4')
            sock.send(buffer, 9996)
            coroutine.sleep(100)
            nfDecoder.stop()
            sock.close()
        });
    });

});